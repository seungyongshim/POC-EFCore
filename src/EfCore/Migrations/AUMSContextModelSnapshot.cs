// <auto-generated />
using System;
using EfCore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EfCore.Migrations
{
    [DbContext(typeof(AUMSContext))]
    partial class AUMSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EfCore.Models.IpInfo", b =>
                {
                    b.Property<int>("IpInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short?>("GrantSend")
                        .HasColumnType("smallint");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<bool?>("PermissionYn")
                        .HasColumnType("bit")
                        .HasColumnName("PermissionYN");

                    b.Property<bool?>("UseYn")
                        .HasColumnType("bit")
                        .HasColumnName("UseYN");

                    b.Property<int?>("UserInfoId")
                        .HasColumnType("int");

                    b.HasKey("IpInfoId");

                    b.HasIndex("UserInfoId");

                    b.HasIndex(new[] { "IpAddress" }, "IX_IpInfo_1");

                    b.HasIndex(new[] { "IpAddress" }, "UQ_IpInfo_1")
                        .IsUnique()
                        .HasFilter("[IpAddress] IS NOT NULL");

                    b.ToTable("IpInfos");
                });

            modelBuilder.Entity("EfCore.Models.UserInfo", b =>
                {
                    b.Property<int>("UserInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CmpCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<string>("EmpNo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.HasKey("UserInfoId");

                    b.HasIndex(new[] { "EmpNo", "CmpCode" }, "IX_UserInfo_1");

                    b.HasIndex(new[] { "EmpNo", "CmpCode" }, "UQ_UserInfo_1")
                        .IsUnique()
                        .HasFilter("[EmpNo] IS NOT NULL AND [CmpCode] IS NOT NULL");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("EfCore.Models.IpInfo", b =>
                {
                    b.HasOne("EfCore.Models.UserInfo", "UserInfo")
                        .WithMany("IpInfos")
                        .HasForeignKey("UserInfoId")
                        .HasConstraintName("FK_IpInfos_UserInfoId_UserInfos_UserInfoId");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("EfCore.Models.UserInfo", b =>
                {
                    b.Navigation("IpInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
